/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

/// <reference types="truffle-typings" />
import { BigNumber } from "bignumber.js";

export interface MigrationsContract
  extends Truffle.Contract<MigrationsInstance> {
  "new"(meta?: Truffle.TransactionDetails): Promise<MigrationsInstance>;
}

export interface SimpleStorageContract
  extends Truffle.Contract<SimpleStorageInstance> {
  "new"(meta?: Truffle.TransactionDetails): Promise<SimpleStorageInstance>;
}

export interface VotingContract extends Truffle.Contract<VotingInstance> {
  "new"(meta?: Truffle.TransactionDetails): Promise<VotingInstance>;
}

export interface MigrationsInstance extends Truffle.ContractInstance {
  setCompleted(
    completed: number | BigNumber | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<Truffle.TransactionResponse>;

  upgrade(
    new_address: string | BigNumber,
    txDetails?: Truffle.TransactionDetails
  ): Promise<Truffle.TransactionResponse>;

  last_completed_migration(
    txDetails?: Truffle.TransactionDetails
  ): Promise<BigNumber>;
  owner(txDetails?: Truffle.TransactionDetails): Promise<string>;
}

export interface SimpleStorageInstance extends Truffle.ContractInstance {
  set(
    x: number | BigNumber | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<Truffle.TransactionResponse>;

  get(txDetails?: Truffle.TransactionDetails): Promise<BigNumber>;
}

export interface VotingInstance extends Truffle.ContractInstance {
  ballots(
    arg0: number | BigNumber | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<[BigNumber, string, BigNumber]>;

  addBallot(
    name: string,
    proposalCount: number | BigNumber | string,
    voters: (string | BigNumber)[],
    txDetails?: Truffle.TransactionDetails
  ): Promise<Truffle.TransactionResponse>;

  vote(
    ballotId: number | BigNumber | string,
    proposalNumber: number | BigNumber | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<Truffle.TransactionResponse>;

  ballotCount(txDetails?: Truffle.TransactionDetails): Promise<BigNumber>;
  MAX_PROPOSAL_COUNT(
    txDetails?: Truffle.TransactionDetails
  ): Promise<BigNumber>;
}
